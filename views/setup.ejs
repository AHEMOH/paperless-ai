<!DOCTYPE html>
<html>
<head>
  <title>Paperless Assistant Setup</title>
  <style>
    .form-group {
      margin-bottom: 20px;
    }
    label {
      display: block;
      margin-bottom: 5px;
      font-weight: bold;
    }
    input[type="text"], 
    input[type="password"],
    select {
      width: 100%;
      padding: 8px;
      border: 1px solid #ddd;
      border-radius: 4px;
      font-size: 16px;
    }
    .help-text {
      font-size: 0.9em;
      color: #666;
      margin-top: 5px;
    }
    button {
      background: #007bff;
      color: white;
      border: none;
      padding: 10px 20px;
      border-radius: 4px;
      cursor: pointer;
      font-size: 16px;
    }
    button:hover {
      background: #0056b3;
    }
    .error {
      color: #dc3545;
      padding: 10px;
      margin-bottom: 20px;
      border: 1px solid #dc3545;
      border-radius: 4px;
      background: #f8d7da;
    }
    .success {
      color: #28a745;
      padding: 10px;
      margin-bottom: 20px;
      border: 1px solid #28a745;
      border-radius: 4px;
      background: #d4edda;
    }
    .provider-settings {
      display: none;
      margin-top: 10px;
    }
    .provider-settings.active {
      display: block;
    }
  </style>
</head>
<body>
  <h1>Paperless Assistant Setup</h1>
  
  <% if (typeof error !== 'undefined' && error) { %>
    <div class="error"><%= error %></div>
  <% } %>
  
  <% if (typeof success !== 'undefined' && success) { %>
    <div class="success"><%= success %></div>
  <% } %>

  <form action="/setup" method="POST">
    <div class="form-group">
      <label for="paperlessUrl">Paperless-ngx API URL:</label>
      <input 
        type="text" 
        id="paperlessUrl" 
        name="paperlessUrl" 
        value="<%= typeof config !== 'undefined' ? config.PAPERLESS_API_URL || config.paperlessUrl || '' : '' %>"
        placeholder="http://your-paperless-instance:8000/api" 
        required
      >
      <div class="help-text">Die vollständige URL zu Ihrer Paperless-ngx API</div>
    </div>

    <div class="form-group">
      <label for="paperlessToken">Paperless-ngx API Token:</label>
      <input 
        type="password" 
        id="paperlessToken" 
        name="paperlessToken" 
        value="<%= typeof config !== 'undefined' ? config.PAPERLESS_API_TOKEN || config.paperlessToken || '' : '' %>"
        required
      >
      <div class="help-text">Ihr API Token aus den Paperless-ngx Einstellungen</div>
    </div>

    <div class="form-group">
      <label for="aiProvider">KI Provider:</label>
      <select 
        id="aiProvider" 
        name="aiProvider" 
        onchange="toggleProviderSettings()"
        required
      >
        <option value="openai" <%= typeof config !== 'undefined' && config.AI_PROVIDER === 'openai' ? 'selected' : '' %>>OpenAI (ChatGPT)</option>
        <option value="ollama" <%= typeof config !== 'undefined' && config.AI_PROVIDER === 'ollama' ? 'selected' : '' %>>Ollama (Lokales LLM)</option>
      </select>
      <div class="help-text">Wählen Sie Ihren bevorzugten KI-Provider</div>
    </div>

    <div id="openaiSettings" class="provider-settings <%= typeof config !== 'undefined' && config.AI_PROVIDER === 'ollama' ? '' : 'active' %>">
      <div class="form-group">
        <label for="openaiKey">OpenAI API Key:</label>
        <input 
          type="password" 
          id="openaiKey" 
          name="openaiKey" 
          value="<%= typeof config !== 'undefined' ? config.OPENAI_API_KEY || config.openaiKey || '' : '' %>"
        >
        <div class="help-text">Ihr OpenAI API Key für die ChatGPT Integration</div>
      </div>
    </div>

    <div id="ollamaSettings" class="provider-settings <%= typeof config !== 'undefined' && config.AI_PROVIDER === 'ollama' ? 'active' : '' %>">
      <div class="form-group">
        <label for="ollamaUrl">Ollama API URL:</label>
        <input 
          type="text" 
          id="ollamaUrl" 
          name="ollamaUrl" 
          value="<%= typeof config !== 'undefined' ? config.OLLAMA_API_URL || config.ollamaUrl || 'http://localhost:11434' : 'http://localhost:11434' %>"
        >
        <div class="help-text">Die URL Ihres Ollama Servers (Standard: http://localhost:11434)</div>
      </div>

      <div class="form-group">
        <label for="ollamaModel">Ollama Modell:</label>
        <input 
          type="text" 
          id="ollamaModel" 
          name="ollamaModel" 
          value="<%= typeof config !== 'undefined' ? config.OLLAMA_MODEL || config.ollamaModel || 'llama2' : 'llama2' %>"
        >
        <div class="help-text">Das zu verwendende Ollama Modell (z.B. llama2, mistral)</div>
      </div>
    </div>

    <div class="form-group">
      <label for="scanInterval">Scan Interval (Cron Format):</label>
      <input 
        type="text" 
        id="scanInterval" 
        name="scanInterval" 
        value="<%= typeof config !== 'undefined' ? config.SCAN_INTERVAL || config.scanInterval || '*/30 * * * *' : '*/30 * * * *' %>"
        required
      >
      <div class="help-text">Wie oft soll nach neuen Dokumenten gesucht werden? Standard: Alle 30 Minuten</div>
    </div>

    <button type="submit">Konfiguration speichern</button>
  </form>

  <script>
    function toggleProviderSettings() {
      const provider = document.getElementById('aiProvider').value;
      document.querySelectorAll('.provider-settings').forEach(el => el.classList.remove('active'));
      document.getElementById(`${provider}Settings`).classList.add('active');
      
      // Toggle required attributes
      const openaiInputs = document.querySelectorAll('#openaiSettings input');
      const ollamaInputs = document.querySelectorAll('#ollamaSettings input');
      
      if (provider === 'openai') {
        openaiInputs.forEach(input => input.required = true);
        ollamaInputs.forEach(input => input.required = false);
      } else {
        openaiInputs.forEach(input => input.required = false);
        ollamaInputs.forEach(input => input.required = true);
      }
    }

    // Initialize on page load
    document.addEventListener('DOMContentLoaded', toggleProviderSettings);
  </script>
</body>
</html>